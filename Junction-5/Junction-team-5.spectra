import "./patterns/DwyerPatternsNamed.spectra"

spec JunctionModule

// *********************************************
// *** define type of all possible vehicles  ***
// *********************************************

type Vehicle = {NONE, CAR, EMERGENCY};

// ****************************************************************************************
// *** cars arrays env variables, index 0 - right , index 1 - straight , index 2 - left ***
// ****************************************************************************************

env Vehicle[3] vehiclesNorth;
env Vehicle[3] vehiclesSouth;

// ************************************************************
// *** pedestrians arrays env variables                     ***
// *** for south and north: index 0 - west , index 1 - east ***
// *** for east and west: index 0 - north , index 1 - south ***
// ************************************************************

env boolean[2] pedestriansNorthPressed;
env boolean[2] pedestriansSouthPressed;
env boolean[2] pedestriansEastPressed;
env boolean[2] pedestriansWestPressed;

// ***********************************************
// *** special climate heavy fog env variable ***
// ***********************************************

env boolean foggy;

// *********************************************
// *** north road constructions env variable ***
// *********************************************

env boolean roadConstructions;

// *******************************************************************************************************
// *** cars traffic lights arrays sys variables, index 0 - right , index 1 - straight , index 2 - left ***
// *******************************************************************************************************

sys boolean[3] greenNorthVehicles;
sys boolean[3] greenSouthVehicles;

// ************************************************************
// *** pedestrians traffic lights arrays sys variables      ***
// *** for south and north: index 0 - west , index 1 - east ***
// *** for east and west: index 0 - north , index 1 - south ***
// ************************************************************

sys boolean[2] greenNorthPedestrians;
sys boolean[2] greenSouthPedestrians;
sys boolean[2] greenEastPedestrians;
sys boolean[2] greenWestPedestrians;

// ******************************************

env boolean freezeMode;
env boolean manualMode;

// ***************** Defines *****************
define right_lane := 0;
define straight_lane := 1;
define left_lane := 2;

define north := 0;
define south := 1;
define west := 0;
define east := 1;

//---------------------------------------------- Implementation from here ----------------------------------------------
//----------------------------------------------------------------------------------------------------------------------

//  ====================================================================================================

//gar trig [true]*[!greenNorthVehicles[right_lane] & vehiclesNorth[right_lane] != NONE]{2,} |=> 
//		[greenNorthVehicles[right_lane] & !greenWestPedestrians[north] & greenNorthVehicles[right_lane]];
//
//gar trig [true]*[!greenNorthVehicles[straight_lane] & vehiclesNorth[straight_lane] != NONE]{2,} |=> 
//		[greenNorthVehicles[straight_lane] & !greenSouthPedestrians[west] & !greenSouthVehicles[left_lane]];
//
//gar trig [true]*[!greenNorthVehicles[left_lane] & vehiclesNorth[left_lane] != NONE]{2,} |=> 
//			[greenNorthVehicles[left_lane] & !greenEastPedestrians[south] & !greenSouthVehicles[straight_lane] & !greenSouthVehicles[left_lane]];
//
//gar trig [true]*[!greenSouthVehicles[right_lane] & vehiclesSouth[right_lane] != NONE]{2,} |=> 
//		[greenSouthVehicles[right_lane] & !greenEastPedestrians[south]];
//
//gar trig [true]*[!greenSouthVehicles[straight_lane] & vehiclesSouth[straight_lane] != NONE]{2,} |=> 
//		[greenSouthVehicles[straight_lane] & !greenNorthPedestrians[east] & !greenNorthVehicles[left_lane]];
//
//gar trig [true]*[!greenSouthVehicles[left_lane] & vehiclesSouth[left_lane] != NONE]{2,} |=> 
//		[greenSouthVehicles[left_lane] & !greenWestPedestrians[north] & !greenNorthVehicles[straight_lane] & !greenNorthVehicles[left_lane]];
//
//gar trig [true]*[!greenNorthPedestrians[west] & pedestriansNorthPressed[west]]{2,} |=> 
//		[greenNorthPedestrians[west] & !greenNorthVehicles[right_lane] & !greenNorthVehicles[straight_lane] & !greenNorthVehicles[left_lane]];
//
//gar trig [true]*[!greenNorthPedestrians[east] & pedestriansNorthPressed[east]]{2,} |=> [!greenNorthPedestrians[east] & !greenSouthVehicles[straight_lane]];
//
//gar trig [true]*[!greenSouthPedestrians[west] & pedestriansSouthPressed[west]]{2,} |=> [greenSouthPedestrians[west] & !greenNorthVehicles[straight_lane]];
//
//gar trig [true]*[!greenSouthPedestrians[east] & pedestriansSouthPressed[east]]{2,} |=> 
//		[greenSouthPedestrians[east] & !greenSouthVehicles[right_lane] & !greenSouthVehicles[straight_lane] & !greenSouthVehicles[left_lane]];
//
//gar trig [true]*[!greenEastPedestrians[south] & pedestriansEastPressed[south]]{2,} |=> 
//		[greenEastPedestrians[south] & !greenNorthVehicles[left_lane] & !greenSouthVehicles[right_lane]];
//
//gar trig [true]*[!greenWestPedestrians[north] & pedestriansWestPressed[north]]{2,} |=> 
//		[greenWestPedestrians[north] & !greenNorthVehicles[right_lane] & !greenSouthVehicles[left_lane]];

// North right lane logic
gar alw !greenWestPedestrians[north] & !greenNorthPedestrians[west] & vehiclesNorth[right_lane] != NONE & 
		greenNorthVehicles[right_lane] | !greenNorthVehicles[right_lane];

// North straight lane logic
gar alw !greenSouthPedestrians[west] & !greenNorthPedestrians[west] & !greenSouthVehicles[left_lane] &
		vehiclesNorth[straight_lane] != NONE & greenNorthVehicles[straight_lane] | !greenNorthVehicles[straight_lane];

// North left lane logic
gar alw !greenEastPedestrians[south] & !greenNorthPedestrians[west] & !greenSouthVehicles[straight_lane] &
		!greenSouthVehicles[left_lane] & vehiclesNorth[left_lane] != NONE & greenNorthVehicles[left_lane] |
		!greenNorthVehicles[left_lane];
		
// South right lane logic
gar alw !greenEastPedestrians[south] & !greenSouthPedestrians[east] & vehiclesSouth[right_lane] != NONE & 
		greenSouthVehicles[right_lane] | !greenSouthVehicles[right_lane];

// South straight lane logic
gar alw !greenNorthPedestrians[east] & !greenSouthPedestrians[east] & !greenNorthVehicles[left_lane] &
		vehiclesSouth[straight_lane] != NONE & greenSouthVehicles[straight_lane] | !greenSouthVehicles[straight_lane];
		
// South left lane logic
gar alw !greenWestPedestrians[north] & !greenSouthPedestrians[east] & !greenNorthVehicles[straight_lane] &
		!greenNorthVehicles[left_lane] & vehiclesSouth[left_lane] != NONE & greenSouthVehicles[left_lane] |
		!greenSouthVehicles[left_lane];
 		
gar alw greenEastPedestrians[north];
gar alw greenWestPedestrians[south];

// North-West pedestrian side walk logic
gar alw !greenNorthVehicles[right_lane] & !greenNorthVehicles[straight_lane] & !greenNorthVehicles[left_lane] &
		pedestriansNorthPressed[west] & greenNorthPedestrians[west] | !greenNorthPedestrians[west];

// South-East pedestrian side walk logic
gar alw !greenSouthVehicles[right_lane] & !greenSouthVehicles[straight_lane] & !greenSouthVehicles[left_lane] &
		pedestriansSouthPressed[east] & greenSouthPedestrians[east] | !greenSouthPedestrians[east];

// North-East pedestrian side walk logic
gar alw !greenSouthVehicles[straight_lane] & pedestriansNorthPressed[east] & greenNorthPedestrians[east] | 
		!greenNorthPedestrians[east];

// South-West pedestrian side walk logic
gar alw !greenNorthVehicles[straight_lane] & pedestriansSouthPressed[west] & greenSouthPedestrians[west] |
		!greenSouthPedestrians[west];

// West-North pedestrian side walk logic
gar alw !greenNorthVehicles[right_lane] & !greenSouthVehicles[left_lane] & pedestriansWestPressed[north] &
		greenWestPedestrians[north] | !greenWestPedestrians[north];

// East-South pedestrian side walk logic
gar alw !greenNorthVehicles[left_lane] & !greenSouthVehicles[right_lane] & pedestriansEastPressed[south] &
		greenEastPedestrians[south] | !greenEastPedestrians[south];

//gar trig [true]*[greenSouthVehicles[left_lane]]{2} |=> [!greenSouthVehicles[left_lane]];
//gar trig [true]*[greenNorthVehicles[left_lane]]{2} |=> [!greenNorthVehicles[left_lane]];
//
//gar trig [true]*[greenSouthVehicles[right_lane]]{2} |=> [!greenSouthVehicles[right_lane]];
//gar trig [true]*[greenNorthVehicles[right_lane]]{2} |=> [!greenNorthVehicles[right_lane]];
//
//gar trig [true]*[greenSouthVehicles[straight_lane]]{2} |=> [!greenSouthVehicles[straight_lane]];
//gar trig [true]*[greenNorthVehicles[straight_lane]]{2} |=> [!greenNorthVehicles[straight_lane]];
//
//gar trig [true]*[greenNorthPedestrians[west]]{2} |=> [!greenNorthPedestrians[west]];
//gar trig [true]*[greenNorthPedestrians[east]]{2} |=> [!greenNorthPedestrians[east]];
//
//gar trig [true]*[greenSouthPedestrians[west]]{2} |=> [!greenSouthPedestrians[west]];
//gar trig [true]*[greenSouthPedestrians[east]]{2} |=> [!greenSouthPedestrians[east]];
//
//gar trig [true]*[greenEastPedestrians[south]]{2} |=> [!greenEastPedestrians[south]];
//
//gar trig [true]*[greenWestPedestrians[north]]{2} |=> [!greenWestPedestrians[north]];

gar trig [true]*[pedestriansNorthPressed[west]] |=> [true]*[greenNorthPedestrians[west]];
gar trig [true]*[pedestriansNorthPressed[east]] |=> [true]*[greenNorthPedestrians[east]];

gar trig [true]*[pedestriansSouthPressed[west]] |=> [true]*[greenSouthPedestrians[west]];
gar trig [true]*[pedestriansSouthPressed[east]] |=> [true]*[greenSouthPedestrians[east]];

gar trig [true]*[pedestriansWestPressed[north]] |=> [true]*[greenWestPedestrians[north]];
gar trig [true]*[pedestriansWestPressed[south]] |=> [true]*[greenWestPedestrians[south]];

gar trig [true]*[pedestriansEastPressed[north]] |=> [true]*[greenEastPedestrians[north]];
gar trig [true]*[pedestriansEastPressed[south]] |=> [true]*[greenEastPedestrians[south]];

gar trig [true]*[vehiclesNorth[right_lane] != NONE] |=> [true]*[greenNorthVehicles[right_lane]];
gar trig [true]*[vehiclesNorth[straight_lane] != NONE] |=> [true]*[greenNorthVehicles[straight_lane]];
gar trig [true]*[vehiclesNorth[left_lane] != NONE] |=> [true]*[greenNorthVehicles[left_lane]];

gar trig [true]*[vehiclesSouth[right_lane] != NONE] |=> [true]*[greenSouthVehicles[right_lane]];
gar trig [true]*[vehiclesSouth[straight_lane] != NONE] |=> [true]*[greenSouthVehicles[straight_lane]];
gar trig [true]*[vehiclesSouth[left_lane] != NONE] |=> [true]*[greenSouthVehicles[left_lane]];

// ========================== Pedestrian waits until there is a green light ==========================
asm trig [true]*[pedestriansNorthPressed[west] & !greenNorthPedestrians[west]] |=> 
		[pedestriansNorthPressed[west] & !greenNorthPedestrians[west]]*[pedestriansNorthPressed[west] & greenNorthPedestrians[west]];

asm trig [true]*[pedestriansNorthPressed[east] & !greenNorthPedestrians[east]] |=> 
		[pedestriansNorthPressed[east] & !greenNorthPedestrians[east]]*[pedestriansNorthPressed[east] & greenNorthPedestrians[east]];

asm trig [true]*[pedestriansSouthPressed[west] & !greenSouthPedestrians[west]] |=> 
		[pedestriansSouthPressed[west] & !greenSouthPedestrians[west]]*[pedestriansSouthPressed[west] & greenSouthPedestrians[west]];

asm trig [true]*[pedestriansSouthPressed[east] & !greenSouthPedestrians[east]] |=> 
		[pedestriansSouthPressed[east] & !greenSouthPedestrians[east]]*[pedestriansSouthPressed[east] & greenSouthPedestrians[east]];

asm trig [true]*[pedestriansWestPressed[north] & !greenWestPedestrians[north]] |=> 
		[pedestriansWestPressed[north] & !greenWestPedestrians[north]]*[pedestriansWestPressed[north] & greenWestPedestrians[north]];

asm trig [true]*[pedestriansWestPressed[south] & !greenWestPedestrians[south]] |=> 
		[pedestriansWestPressed[south] & !greenWestPedestrians[south]]*[pedestriansWestPressed[south] & greenWestPedestrians[south]];
		
asm trig [true]*[pedestriansEastPressed[north] & !greenEastPedestrians[north]] |=> 
		[pedestriansEastPressed[north] & !greenEastPedestrians[north]]*[pedestriansEastPressed[north] & greenEastPedestrians[north]];

asm trig [true]*[pedestriansEastPressed[south] & !greenEastPedestrians[south]] |=> 
		[pedestriansEastPressed[south] & !greenEastPedestrians[south]]*[pedestriansEastPressed[south] & greenEastPedestrians[south]];
		
